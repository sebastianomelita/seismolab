#include <Arduino.h>
#include <SoftwareSerial.h>
#include "common.h"
#include "ESP8266wifi.h"

#define sw_serial_rx_pin 2 //  Connect this pin to TX on the esp8266
#define sw_serial_tx_pin 3 //  Connect this pin to RX on the esp8266
#define esp8266_reset_pin 4 // Connect this pin to CH_PD on the esp8266, not reset. (let reset be unconnected)
//#define SSID "pippo"
//#define PASSWORD "topolino"
#define SSID "OpenWrt"
#define PASSWORD "dorabino.7468!"

//ESP8266wifi wifi(swSerial, swSerial, esp8266_reset_pin, Serial);
SoftwareSerial swSerial(sw_serial_rx_pin, sw_serial_tx_pin);
ESP8266wifi &wifi=ESP8266wifi::getWifi(swSerial, swSerial, esp8266_reset_pin, Serial);

unsigned long lastAliveMs = 0;
unsigned long lastProbeMs = 0;
uint32_t probeCount = 0;

void setup() {  
    // start debug serial
    swSerial.begin(19200);
    // start HW serial for ESP8266 (change baud depending on firmware)
    Serial.begin(19200);
    while (!Serial)
      ;
    bool wifi_started = wifi.begin();
    if (wifi_started) {
       wifi.connectToAP(SSID, PASSWORD);
    } else {
       Serial.println(F("ESP8266 isn't working.."));
    }

    Serial.print("setup end\r\n");

    LED::init(LED_GREEN, LED_YELLOW, LED_RED);
    LED::green(true);
    LED::red(true);
    LED::yellow(true);
  
    Serial.println("SeismoCloud-Arduino version ");
    Serial.println(getVersionAsString());

    checkEEPROM();

    // Check config, load MAC and lat/lon
    loadConfig();

    Serial.print("MAC Address: ");
    Serial.println(wifi.getMAC());

    // Check Ethernet link
    Serial.print("My IP address: ");
    Serial.println(wifi.getIP());

       Serial.print("Boot completed at ");
    Serial.println();
    LED::startupBlink();
    LED::green(true);
}

void loop() {
  //Make sure the esp8266 is started..
  //if (!wifi.isStarted())
   // wifi.begin();
	
  
  LED::tick();

 
}

